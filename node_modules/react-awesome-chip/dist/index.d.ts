import { GridSpacing } from '@material-ui/core';
import React, { DispatchWithoutAction } from 'react';
export declare type PropsOf<TComponentOrTProps> = TComponentOrTProps extends React.ComponentType<infer TProps> ? TProps : TComponentOrTProps;
export declare type Function<T, U> = (a: T) => U;
export declare type Action1<T> = (a: T) => void;
export declare type ChipSize = 'sm' | 'md' | 'lg';
export declare type ChipType = 'filled' | 'outlined' | 'filledOutlined' | 'text' | 'filledBold';
export declare const Chip: ({ color, title, size, type, onClick }: {
    color: string;
    title: string;
    size?: "sm" | "md" | "lg" | undefined;
    type?: "filled" | "outlined" | "filledOutlined" | "text" | "filledBold" | undefined;
    onClick?: React.DispatchWithoutAction | undefined;
}) => JSX.Element;
export declare const ChipsView: ({ chipsProps, spacing }: {
    chipsProps: PropsOf<typeof Chip>[];
    spacing?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | undefined;
}) => JSX.Element;
export declare const useFilterView: <T>(chipsData: {
    color: string;
    title: string;
    size?: "sm" | "md" | "lg" | undefined;
    id: T;
}[], config?: {
    defaultAllOn?: boolean | undefined;
    defaultIdsOn?: T[] | undefined;
    typeOn?: "filled" | "outlined" | "filledOutlined" | "text" | "filledBold" | undefined;
    typeOff?: "filled" | "outlined" | "filledOutlined" | "text" | "filledBold" | undefined;
    spacing?: 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | undefined;
} | undefined) => [T[], React.FC<{
    onClick?: Action1<T[]> | undefined;
    className?: string | undefined;
}>];
